name: Docker Image CI

on:
  push:
    branches: ["master"]

jobs:

  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        maven: [ '3.9.0' ]
    steps:
    
    - uses: actions/checkout@v3
    
    - name: Step 1 - Set java version = 11
      uses: actions/setup-java@v1
      with:
          java-version: '11'
          
    - name: step 2 - Set up a cache for maven
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: step 3 - Build project with Maven
      run: mvn -B package --file pom.xml
      
    - name: step 4 -  Maven Verify
      run: mvn -B clean verify
      
    - name: step 5 - Run tests with Maven
      run: mvn -B test --file pom.xml
      
  sonarqube:
    name: SonarQube Trigger
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@master
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}
        projectKey: "backend"
    
  push_to_registry:
      needs: test
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3

        - name: Login to DockerHub
          uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Set outputs
          id: vars
          run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          
        - name: Extract branch name
          shell: bash
          run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
          id: extract_branch


        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
          with:
            images: codelabz/repository

        - name: Build and push the Docker image
          uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
          with:
            context: .
            push: true
            tags: codelabz/repository:backend-${{ steps.extract_branch.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
            labels: ${{ steps.meta.outputs.labels }}
            
        - name: Set Image
          env:
            ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}
            BRANCH_TAG: ${{ steps.extract_branch.outputs.branch }}
            COMMIT_TAG1: ${{ steps.vars.outputs.sha_short }}
          run: |

            git clone https://CodelabzRobot:$ROBOT_TOKEN@github.com/codelabzproject/devops

            cd devops
            git config user.name "CodelabzRobot"
            git config user.email "suporte.codelabz@gmail.com"

            git checkout main

            OLD_IMAGE=$(cat k8s/templates/backend-deployment.yaml | grep "image:" | sed 's/ //g' | cut -d':' -f2-3)
            echo $OLD_IMAGE
            NEW_IMAGE=$(echo "codelabz/repository:backend-$BRANCH_TAG-$COMMIT_TAG1")
            echo $NEW_IMAGE
            sed -i "s|$OLD_IMAGE|$NEW_IMAGE|g" k8s/templates/backend-deployment.yaml
            cat k8s/templates/backend-deployment.yaml
            
            git add .
            git commit -m "Update Manifest"

            git push https://CodelabzRobot:$ROBOT_TOKEN@github.com/codelabzproject/devops main # This does not work either            




